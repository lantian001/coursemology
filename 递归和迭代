递归
递归是不断调用函数本身
即自己调用自己
递归的基本思想是把规模大的问题转化为规模小的相似的子问题来解决。
在函数实现时，因为解决大问题的方法和解决小问题的方法往往是同一个方法，
所以就产生了函数调用它自身的情况。另外这个解决问题的函数必须有明显的结束条件，
这样就不会产生无限递归的情况了。

迭代
迭代是调用函数运行后的结果
如果给定一个list或tuple，我们可以通过for循环来遍历这个list或tuple，这种遍历我们称为迭代（Iteration）。


递归和迭代的异同
递归是自己调用自己，每次旨在缩小问题规模。迭代是自己执行很多次，每次旨在更接近目标。


